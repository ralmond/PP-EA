// ~->[DNET-1]->~

// File created by ShuteV_6 at FloridaStateU using Netica 5.24 on Aug 27, 2018 at 17:55:16 UTC.

bnet PP_OrangeNodes_6 {
AutoCompile = TRUE;
autoupdate = TRUE;
whenchanged = 1535392515;

visual V1 {
	defdispform = BELIEFBARS;
	nodelabeling = TITLE;
	NodeMaxNumEntries = 50;
	nodefont = font {shape= "Arial"; size= 9;};
	linkfont = font {shape= "Arial"; size= 9;};
	windowposn = (451, 0, 902, 545);
	scrollposn = (400, 0);
	resolution = 72;
	drawingbounds = (1515, 782);
	showpagebreaks = FALSE;
	usegrid = TRUE;
	gridspace = (6, 6);
	NodeSet Node {BuiltIn = 1; Color = 0x00e1e1e1;};
	NodeSet Nature {BuiltIn = 1; Color = 0x00f8eed2;};
	NodeSet Deterministic {BuiltIn = 1; Color = 0x00d3caa6;};
	NodeSet Finding {BuiltIn = 1; Color = 0x00c8c8c8;};
	NodeSet Constant {BuiltIn = 1; Color = 0x00ffffff;};
	NodeSet ConstantValue {BuiltIn = 1; Color = 0x00ffffb4;};
	NodeSet Utility {BuiltIn = 1; Color = 0x00ffbdbd;};
	NodeSet Decision {BuiltIn = 1; Color = 0x00dee8ff;};
	NodeSet Documentation {BuiltIn = 1; Color = 0x00f0fafa;};
	NodeSet Title {BuiltIn = 1; Color = 0x00ffffff;};
	NodeSet HighLevel {Color = 0x00ff8080;};
	NodeSet Proficiency {Disabled = 1; Color = 0x00c8c8c8;};
	NodeSet LowLevel {Color = 0x00ff8000;};
	NodeSet pnode {Disabled = 1; Color = 0x00c8c8c8;};
	NodeSet pnodes {Disabled = 1; Color = 0x00c8c8c8;};
	NodeSet Proficiencies {Disabled = 1; Color = 0x00c8c8c8;};
	NodeSet Observable {Disabled = 1; Color = 0x00c8c8c8;};
	PrinterSetting A {
		margins = (1270, 1270, 1270, 1270);
		};
	};
user U1 {
	priorWeight = "10";
	};

node Physics {
	kind = NATURE;
	discrete = TRUE;
	chance = CHANCE;
	states = (High, Medium, Low);
	levels = (0.967421566101701, 0, -0.967421566101701);
	parents = ();
	probs = 
		// High         Medium       Low          
		  (0.3333333,   0.3333333,   0.3333333);
	numcases = 10;
	title = "Physics Understanding";
	whenchanged = 1496353488;
	belief = (0.03411031, 0.2366276, 0.7292621);
	user U1 {
		Q = "TRUE";
		rules = "\"Compensatory\"";
		link = "\"normalLink\"";
		linkScale = "1";
		lnAlphas = "1";
		betas = "0";
		};
	visual V1 {
		center = (81, 216);
		height = 2;
		};
	};

node Energy {
	kind = NATURE;
	discrete = TRUE;
	chance = CHANCE;
	states = (High, Medium, Low);
	levels = (0.967421566101701, 0, -0.967421566101701);
	parents = (Physics);
	probs = 
		// High         Medium       Low           // Physics 
		  (0.9552583,   0.04439932,  3.424191e-4,  // High    
		   0.456465,    0.4558434,   0.0876917,    // Medium  
		   0.01457442,  0.2308127,   0.7546129);   // Low     ;
	EqnDirty = TRUE;
	title = "Energy";
	comment = "Gravitational Potential Energy \nKinetic Energy\nElastic potential energy \nEnergy Conservation \
		";
	whenchanged = 1519318305;
	belief = (0.07468714, 0.2851938, 0.6401191);
	user U1 {
		Q = "TRUE";
		rules = "\"Compensatory\"";
		link = "\"normalLink\"";
		linkScale = "0.447213595499958";
		lnAlphas = "structure(c(-0.178337471969366, -0.0526802578289132), .Names = c(\"Physics\",  \
			\"ForceAndMotion\"))";
		betas = "0";
		};
	visual V1 {
		center = (240, 330);
		height = 1;
		link 1 {
			path = ((140, 260), (180, 287));
			};
		};
	};

node LinearMomentum {
	kind = NATURE;
	discrete = TRUE;
	chance = CHANCE;
	states = (High, Medium, Low);
	levels = (0.967421566101701, 0, -0.967421566101701);
	parents = (Physics, Energy);
	probs = 
		// High         Medium       Low           // Physics Energy 
		  (0.9831994,   0.01672527,  7.539819e-5,  // High    High   
		   0.9501045,   0.0491096,   7.860392e-4,  // High    Medium 
		   0.8132188,   0.1809778,   0.005803434,  // High    Low    
		   0.7608202,   0.2253964,   0.01378342,   // Medium  High   
		   0.5028722,   0.4411874,   0.05594038,   // Medium  Medium 
		   0.2888721,   0.5671702,   0.1439577,    // Medium  Low    
		   0.2582335,   0.5341657,   0.2076009,    // Low     High   
		   0.08271049,  0.5099052,   0.4073843,    // Low     Medium 
		   0.02226809,  0.2917172,   0.6860147);   // Low     Low    ;
	EqnDirty = TRUE;
	title = "Linear Momentum";
	comment = "Properties of momentum\nConservation of momentum";
	whenchanged = 1519318305;
	belief = (0.07204369, 0.3825936, 0.5453627);
	user U1 {
		Q = "TRUE";
		rules = "\"Compensatory\"";
		link = "\"normalLink\"";
		linkScale = "0.447213595499958";
		lnAlphas = "structure(c(-0.255412811882995, 0), .Names = c(\"Physics\", \"ForceAndMotion\" ))";
		betas = "-0.2";
		};
	visual V1 {
		center = (360, 192);
		height = 8;
		link 1 {
			path = ((162, 209), (279, 198));
			};
		};
	};

node EnergyTransfer {
	kind = NATURE;
	discrete = TRUE;
	chance = CHANCE;
	states = (High, Medium, Low);
	levels = (0.967421566101701, 0, -0.967421566101701);
	parents = (Energy);
	probs = 
		// High         Medium       Low           // Energy 
		  (0.834402,    0.1637201,   0.001877881,  // High   
		   0.1677398,   0.6645205,   0.1677398,    // Medium 
		   0.001877881, 0.1637201,   0.834402);    // Low    ;
	numcases = 10;
	title = "Energy can Transfer";
	whenchanged = 1496353488;
	belief = (0.06996021, 0.3187653, 0.6112745);
	user U1 {
		Q = "TRUE";
		rules = "\"Compensatory\"";
		link = "\"normalLink\"";
		linkScale = "0.447213595499958";
		lnAlphas = "structure(-0.111571775657105, .Names = \"Energy\")";
		betas = "0";
		};
	visual V1 {
		center = (444, 366);
		height = 6;
		};
	};

node ConOfMom {
	kind = NATURE;
	discrete = TRUE;
	chance = CHANCE;
	states = (High, Medium, Low);
	levels = (0.967421566101701, 0, -0.967421566101701);
	parents = (LinearMomentum);
	probs = 
		// High         Medium       Low           // LinearMomentum 
		  (0.7864209,   0.2039052,   0.009673978,  // High           
		   0.1004937,   0.4914422,   0.4080641,    // Medium         
		   3.206905e-4, 0.02997972,  0.9696996);   // Low            ;
	title = "Conservation of momentum";
	comment = "The total amount of momentum of a system \ndoes not change during a collision";
	whenchanged = 1519318305;
	belief = (0.0171248, 0.2093361, 0.7735391);
	user U1 {
		Q = "TRUE";
		rules = "\"Compensatory\"";
		link = "\"normalLink\"";
		linkScale = "0.447213595499958";
		lnAlphas = "structure(c(-0.111571775657105, -0.111571775657105), .Names = c(\"LinearMomentum\",  \"POfMom\"\
			))";
		betas = "0.3";
		};
	visual V1 {
		center = (582, 198);
		height = 7;
		};
	};

node NumberAttempts {
	kind = NATURE;
	discrete = TRUE;
	chance = CHANCE;
	states = (one, two, three_four, more_than_four);
	parents = (ConOfMom, EnergyTransfer);
	probs = 
		// one          two          three four   more than four  // ConOfMom EnergyTransfer 
		  (0.7252621,   0.2024506,   0.05651234,  0.01577493,   // High     High           
		   0.5284212,   0.2675407,   0.1354563,   0.06858179,   // High     Medium         
		   0.2828,      0.2597011,   0.2384891,   0.2190098,    // High     Low            
		   0.4058683,   0.2767498,   0.1887076,   0.1286743,    // Medium   High           
		   0.1767377,   0.2185832,   0.2703363,   0.3343428,    // Medium   Medium         
		   0.05111607,  0.1146648,   0.257219,    0.577,        // Medium   Low            
		   0.09939337,  0.1655532,   0.2757515,   0.4593019,    // Low      High           
		   0.02455676,  0.07418851,  0.2241312,   0.6771235,    // Low      Medium         
		   0.00497416,  0.02725654,  0.1493557,   0.8184136);   // Low      Low            ;
	title = "Number of attempts";
	whenchanged = 1535392511;
	evidence = more_than_four;
	belief = (0, 0, 0, 1);
	visual V1 {
		center = (888, 198);
		height = 5;
		};
	};

node Duration {
	kind = NATURE;
	discrete = TRUE;
	chance = CHANCE;
	states = (Very_fast, Fast, Slow, Very_slow);
	parents = (ConOfMom, EnergyTransfer);
	probs = 
		// Very fast    Fast         Slow         Very slow     // ConOfMom EnergyTransfer 
		  (0.7252621,   0.2024506,   0.05651234,  0.01577493,   // High     High           
		   0.5284212,   0.2675407,   0.1354563,   0.06858179,   // High     Medium         
		   0.2828,      0.2597011,   0.2384891,   0.2190098,    // High     Low            
		   0.4058683,   0.2767498,   0.1887076,   0.1286743,    // Medium   High           
		   0.1767377,   0.2185832,   0.2703363,   0.3343428,    // Medium   Medium         
		   0.05111607,  0.1146648,   0.257219,    0.577,        // Medium   Low            
		   0.09939337,  0.1655532,   0.2757515,   0.4593019,    // Low      High           
		   0.02455676,  0.07418851,  0.2241312,   0.6771235,    // Low      Medium         
		   0.00497416,  0.02725654,  0.1493557,   0.8184136);   // Low      Low            ;
	title = "Duration to solve level";
	whenchanged = 1535392514;
	evidence = Very_slow;
	belief = (0, 0, 0, 1);
	visual V1 {
		center = (912, 318);
		height = 4;
		};
	};

node TrophyLevel {
	kind = NATURE;
	discrete = TRUE;
	chance = CHANCE;
	states = (Gold, Silver, None);
	parents = (ConOfMom, EnergyTransfer);
	probs = 
		// Gold         Silver       None          // ConOfMom EnergyTransfer 
		  (0.7368864,   0.2056955,   0.0574181,    // High     High           
		   0.5673297,   0.2872401,   0.1454302,    // High     Medium         
		   0.3621041,   0.3325281,   0.3053678,    // High     Low            
		   0.4658055,   0.3176192,   0.2165753,    // Medium   High           
		   0.2655086,   0.328372,    0.4061194,    // Medium   Medium         
		   0.1208417,   0.2710753,   0.608083,     // Medium   Low            
		   0.1838241,   0.3061842,   0.5099916,    // Low      High           
		   0.0760562,   0.2297737,   0.6941701,    // Low      Medium         
		   0.0273928,   0.1501023,   0.8225049);   // Low      Low            ;
	title = "Level solving status";
	whenchanged = 1535392515;
	evidence = Silver;
	belief = (0, 1, 0);
	visual V1 {
		center = (876, 402);
		height = 3;
		link 1 {
			path = ((644, 242), (829, 369));
			};
		};
	};
NodeSet HighLevel {Nodes = (Energy, LinearMomentum);};
NodeSet Proficiency {Nodes = (Energy, LinearMomentum, Physics, EnergyTransfer, ConOfMom);};
NodeSet LowLevel {Nodes = (EnergyTransfer, ConOfMom);};
NodeSet pnode {Nodes = (Physics);};
NodeSet pnodes {Nodes = (Energy, LinearMomentum, Physics, EnergyTransfer, ConOfMom);};
NodeSet Proficiencies {Nodes = (Energy, LinearMomentum, EnergyTransfer, ConOfMom);};
NodeSet Observable {Nodes = (NumberAttempts, Duration, TrophyLevel);};
ElimOrder = (Physics, TrophyLevel, NumberAttempts, Duration, Energy, LinearMomentum, ConOfMom, EnergyTransfer);
};
