// ~->[DNET-1]->~

// File created by AlmondR_2 at FLStateU using Netica 5.10 on Jan 17, 2020 at 17:42:27.

bnet Fireworks {
autoupdate = FALSE;
title = "Fireworks";
whenchanged = 1579300947;
user U1 {
	Truename = "Fireworks";
	Hub = "PP_OrangeNodes_6";
	Pathname = "Fireworks.dne";
	};

param X_EnergyDissipate_5 {
	kind = DISCONNECTED;
	discrete = TRUE;
	states = (High, Medium, Low);
	levels = (0.9674215661, 0, -0.9674215661);
	title = "EnergyDissipate";
	whenchanged = 1579300574;
	};

param X_NTL_5 {
	kind = DISCONNECTED;
	discrete = TRUE;
	states = (High, Medium, Low);
	levels = (0.9674215661, 0, -0.9674215661);
	title = "NTL";
	whenchanged = 1579300574;
	};

node Duration {
	kind = NATURE;
	discrete = FALSE;
	chance = CHANCE;
	states = (Q1, Q2, Q3, Q4);
	levels = (0, 18.994, 43.953, 87.187, INFINITY);
	inputs = (NTL, EnergyDissipate);
	parents = (X_NTL_5, X_EnergyDissipate_5);
	probs = 
		// Q1           Q2           Q3           Q4            // NTL    EnergyDissipate 
		  (0.9444789,   0.05244702,  0.00291239,  1.617254e-4,  // High   High            
		   0.910646,    0.08142289,  0.007280202, 6.509391e-4,  // High   Medium          
		   0.8564,      0.123294,    0.01775036,  0.00255548,   // High   Low             
		   0.88669,     0.1006011,   0.0114139,   0.001294986,  // Medium High            
		   0.8182278,   0.1494767,   0.02730694,  0.004988527,  // Medium Medium          
		   0.7111749,   0.2091915,   0.06153353,  0.01810004,   // Medium Low             
		   0.7704139,   0.1785902,   0.04139913,  0.009596761,  // Low    High            
		   0.6391537,   0.2385652,   0.08904488,  0.03323616,   // Low    Medium          
		   0.4588707,   0.2757785,   0.1657412,   0.09960949);  // Low    Low             ;
	numcases = 10;
	title = "Duration to solve level";
	whenchanged = 1579300574;
	user U1 {
		Truename = "Duration";
		link = "\"partialCredit\"";
		rules = "\"Compensatory\"";
		Q = "structure(c(TRUE, TRUE, TRUE, TRUE, TRUE, TRUE), .Dim = 3:2, .Dimnames = list(     c(\"193\", \
			\"194\", \"195\"), c(\"NTL\", \"EnergyDissipate\")))";
		lnAlphas = "list(c(NTL = -0.487109097148675, EnergyDissipate = -0.892574205256839 ), c(NTL = \
			-0.487109097148675, EnergyDissipate = -0.892574205256839 ), c(NTL = -0.487109097148675, \
			EnergyDissipate = -0.892574205256839 ))";
		betas = "list(-1L, -1L, -1L)";
		priorWeight = "10";
		};
	};

param X_EnergyDissipate_4 {
	kind = DISCONNECTED;
	discrete = TRUE;
	states = (High, Medium, Low);
	levels = (0.9674215661, 0, -0.9674215661);
	title = "EnergyDissipate";
	whenchanged = 1579300574;
	};

param X_NTL_4 {
	kind = DISCONNECTED;
	discrete = TRUE;
	states = (High, Medium, Low);
	levels = (0.9674215661, 0, -0.9674215661);
	title = "NTL";
	whenchanged = 1579300574;
	};

node Bounciness {
	kind = NATURE;
	discrete = TRUE;
	chance = CHANCE;
	states = (Yes, No);
	inputs = (NTL, EnergyDissipate);
	parents = (X_NTL_4, X_EnergyDissipate_4);
	probs = 
		// Yes          No            // NTL    EnergyDissipate 
		  (0.9473913,   0.05260875,   // High   High            
		   0.9179262,   0.08207383,   // High   Medium          
		   0.8741505,   0.1258495,    // High   Low             
		   0.8981039,   0.1018961,    // Medium High            
		   0.8455347,   0.1544653,    // Medium Medium          
		   0.7727084,   0.2272916,    // Medium Low             
		   0.8118131,   0.188187,     // Low    High            
		   0.7281986,   0.2718014,    // Low    Medium          
		   0.624612,    0.375388);    // Low    Low             ;
	numcases = 10;
	title = "Check Bounciness";
	whenchanged = 1579300574;
	user U1 {
		Truename = "Bounciness";
		link = "\"partialCredit\"";
		rules = "\"Compensatory\"";
		Q = "TRUE";
		lnAlphas = "c(NTL = -0.487109097148675, EnergyDissipate = -0.892574205256839 )";
		betas = "-1L";
		priorWeight = "10";
		};
	};

param X_EnergyDissipate_3 {
	kind = DISCONNECTED;
	discrete = TRUE;
	states = (High, Medium, Low);
	levels = (0.9674215661, 0, -0.9674215661);
	title = "EnergyDissipate";
	whenchanged = 1579300573;
	};

param X_NTL_3 {
	kind = DISCONNECTED;
	discrete = TRUE;
	states = (High, Medium, Low);
	levels = (0.9674215661, 0, -0.9674215661);
	title = "NTL";
	whenchanged = 1579300573;
	};

node AppropriateSlider {
	kind = NATURE;
	discrete = TRUE;
	chance = CHANCE;
	states = (almostAlways, mostly, mostlyNot, almostNever);
	statetitles = ("almost always", "mostly", "mostlyNot", "almost never");
	StateComments = ("#Irrelvant < 2", "#Irrelvant < #Relevant", "#relevant <= #Irrevalnt", "#relevant < 2");
	inputs = (NTL, EnergyDissipate);
	parents = (X_NTL_3, X_EnergyDissipate_3);
	probs = 
		// almost always mostly      mostlyNot    almost never  // NTL    EnergyDissipate 
		  (0.9444789,   0.05244702,  0.00291239,  1.617254e-4,  // High   High            
		   0.910646,    0.08142289,  0.007280202, 6.509391e-4,  // High   Medium          
		   0.8564,      0.123294,    0.01775036,  0.00255548,   // High   Low             
		   0.88669,     0.1006011,   0.0114139,   0.001294986,  // Medium High            
		   0.8182278,   0.1494767,   0.02730694,  0.004988527,  // Medium Medium          
		   0.7111749,   0.2091915,   0.06153353,  0.01810004,   // Medium Low             
		   0.7704139,   0.1785902,   0.04139913,  0.009596761,  // Low    High            
		   0.6391537,   0.2385652,   0.08904488,  0.03323616,   // Low    Medium          
		   0.4588707,   0.2757785,   0.1657412,   0.09960949);  // Low    Low             ;
	numcases = 10;
	title = "Slider";
	whenchanged = 1579300573;
	user U1 {
		Truename = "AppropriateSlider";
		link = "\"partialCredit\"";
		rules = "\"Compensatory\"";
		Q = "structure(c(TRUE, TRUE, TRUE, TRUE, TRUE, TRUE), .Dim = 3:2, .Dimnames = list(     c(\"189\", \
			\"190\", \"191\"), c(\"NTL\", \"EnergyDissipate\")))";
		lnAlphas = "list(c(NTL = -0.487109097148675, EnergyDissipate = -0.892574205256839 ), c(NTL = \
			-0.487109097148675, EnergyDissipate = -0.892574205256839 ), c(NTL = -0.487109097148675, \
			EnergyDissipate = -0.892574205256839 ))";
		betas = "list(-1L, -1L, -1L)";
		priorWeight = "10";
		};
	};

param X_EnergyDissipate_2 {
	kind = DISCONNECTED;
	discrete = TRUE;
	states = (High, Medium, Low);
	levels = (0.9674215661, 0, -0.9674215661);
	title = "EnergyDissipate";
	whenchanged = 1579300572;
	};

param X_NTL_2 {
	kind = DISCONNECTED;
	discrete = TRUE;
	states = (High, Medium, Low);
	levels = (0.9674215661, 0, -0.9674215661);
	title = "NTL";
	whenchanged = 1579300572;
	};

node SliderAdjust {
	kind = NATURE;
	discrete = FALSE;
	chance = CHANCE;
	states = (Zero, One, Two, MorethanTwo);
	levels = (0, 0.1, 1.1, 2.1, INFINITY);
	inputs = (NTL, EnergyDissipate);
	parents = (X_NTL_2, X_EnergyDissipate_2);
	probs = 
		// Zero         One          Two          MorethanTwo   // NTL    EnergyDissipate 
		  (0.9444789,   0.05244702,  0.00291239,  1.617254e-4,  // High   High            
		   0.910646,    0.08142289,  0.007280202, 6.509391e-4,  // High   Medium          
		   0.8564,      0.123294,    0.01775036,  0.00255548,   // High   Low             
		   0.88669,     0.1006011,   0.0114139,   0.001294986,  // Medium High            
		   0.8182278,   0.1494767,   0.02730694,  0.004988527,  // Medium Medium          
		   0.7111749,   0.2091915,   0.06153353,  0.01810004,   // Medium Low             
		   0.7704139,   0.1785902,   0.04139913,  0.009596761,  // Low    High            
		   0.6391537,   0.2385652,   0.08904488,  0.03323616,   // Low    Medium          
		   0.4588707,   0.2757785,   0.1657412,   0.09960949);  // Low    Low             ;
	numcases = 10;
	title = "Number of slider adjustment";
	whenchanged = 1579300572;
	user U1 {
		Truename = "SliderAdjust";
		link = "\"partialCredit\"";
		rules = "\"Compensatory\"";
		Q = "structure(c(TRUE, TRUE, TRUE, TRUE, TRUE, TRUE), .Dim = 3:2, .Dimnames = list(     c(\"186\", \
			\"187\", \"188\"), c(\"NTL\", \"EnergyDissipate\")))";
		lnAlphas = "list(c(NTL = -0.487109097148675, EnergyDissipate = -0.892574205256839 ), c(NTL = \
			-0.487109097148675, EnergyDissipate = -0.892574205256839 ), c(NTL = -0.487109097148675, \
			EnergyDissipate = -0.892574205256839 ))";
		betas = "list(-1L, -1L, -1L)";
		priorWeight = "10";
		};
	};

param X_EnergyDissipate_1 {
	kind = DISCONNECTED;
	discrete = TRUE;
	states = (High, Medium, Low);
	levels = (0.9674215661, 0, -0.9674215661);
	title = "EnergyDissipate";
	whenchanged = 1579300572;
	};

param X_NTL_1 {
	kind = DISCONNECTED;
	discrete = TRUE;
	states = (High, Medium, Low);
	levels = (0.9674215661, 0, -0.9674215661);
	title = "NTL";
	whenchanged = 1579300572;
	};

node TrophyLevel {
	kind = NATURE;
	discrete = TRUE;
	chance = CHANCE;
	states = (Gold, Silver, None);
	levels = (2, 1, 0);
	inputs = (NTL, EnergyDissipate);
	parents = (X_NTL_1, X_EnergyDissipate_1);
	probs = 
		// Gold         Silver       None          // NTL    EnergyDissipate 
		  (0.9446316,   0.05245551,  0.002912861,  // High   High            
		   0.9112391,   0.08147592,  0.007284944,  // High   Medium          
		   0.8585943,   0.1236099,   0.01779584,   // High   Low             
		   0.8878397,   0.1007316,   0.0114287,    // Medium High            
		   0.82233,     0.1502261,   0.02744384,   // Medium Medium          
		   0.7242845,   0.2130477,   0.06266782,   // Medium Low             
		   0.777879,    0.1803207,   0.04180027,   // Low    High            
		   0.661127,    0.2467668,   0.09210614,   // Low    Medium          
		   0.5096352,   0.3062877,   0.1840771);   // Low    Low             ;
	numcases = 10;
	title = "Level solving status";
	whenchanged = 1579300572;
	user U1 {
		Truename = "TrophyLevel";
		link = "\"partialCredit\"";
		rules = "\"Compensatory\"";
		Q = "structure(c(TRUE, TRUE, TRUE, TRUE), .Dim = c(2L, 2L), .Dimnames = list(     c(\"184\", \
			\"185\"), c(\"NTL\", \"EnergyDissipate\")))";
		lnAlphas = "list(c(NTL = -0.487109097148675, EnergyDissipate = -0.892574205256839 ), c(NTL = \
			-0.487109097148675, EnergyDissipate = -0.892574205256839 ))";
		betas = "list(-1L, -1L)";
		priorWeight = "10";
		};
	};
NodeSet pnodes {Nodes = (TrophyLevel, SliderAdjust, AppropriateSlider, Bounciness, Duration);};
NodeSet Observable {Nodes = (TrophyLevel, SliderAdjust, AppropriateSlider, Bounciness, Duration);};
};
