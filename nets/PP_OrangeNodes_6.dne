// ~->[DNET-1]->~

// File created by AlmondR at FloridaStateU using Netica 6.07 on 07/06/2020 at 04:31:41 PM UTC.

bnet PP_OrangeNodes_6 {
autoupdate = FALSE;
title = "Physics competency";
whenchanged = 1594052876;
user U1 {
	Truename = "PP_OrangeNodes_6";
	Pathname = "/home/ralmond/Projects/PP-EA/nets/PP_OrangeNodes_6.dne";
	};

node Physics {
	discrete = TRUE;
	states = (High, Medium, Low);
	levels = (0.9674215661, 0, -0.9674215661);
	kind = NATURE;
	chance = CHANCE;
	parents = ();
	probs = 
		// High         Medium       Low          
		  (0.3333333,   0.3333333,   0.3333333);
	numcases = 10;
	title = "Physics Understanding";
	whenchanged = 1594052873;
	user U1 {
		Truename = "Physics";
		rules = "structure(\"Compensatory\", .Names = \"Physics\")";
		link = "structure(\"normalLink\", .Names = \"Physics\")";
		betas = "structure(0, .Names = \"Physics\")";
		linkScale = "1";
		Q = "TRUE";
		lnAlphas = "structure(numeric(0), .Names = character(0))";
		priorWeight = "10";
		};
	};

node ForceAndMotion {
	discrete = TRUE;
	states = (High, Medium, Low);
	levels = (0.9674215661, 0, -0.9674215661);
	kind = NATURE;
	chance = CHANCE;
	parents = (Physics);
	probs = 
		// High         Medium       Low           // Physics 
		  (0.9816795,   0.01829091,  2.959554e-5,  // High    
		   0.5615493,   0.4197415,   0.0187092,    // Medium  
		   0.03754251,  0.5206256,   0.4418319);   // Low     ;
	numcases = 10;
	title = "Force and Motion";
	comment = "Newton's laws of motion";
	whenchanged = 1594052873;
	user U1 {
		Truename = "ForceAndMotion";
		rules = "structure(\"Compensatory\", .Names = \"ForceAndMotion\")";
		link = "structure(\"normalLink\", .Names = \"ForceAndMotion\")";
		betas = "structure(-0.5, .Names = \"ForceAndMotion\")";
		linkScale = "0.4472135955";
		Q = "TRUE";
		lnAlphas = "structure(-0.111571775657011, .Names = \"Physics\")";
		priorWeight = "10";
		};
	};

node LinearMomentum {
	discrete = TRUE;
	states = (High, Medium, Low);
	levels = (0.9674215661, 0, -0.9674215661);
	kind = NATURE;
	chance = CHANCE;
	parents = (Physics, ForceAndMotion);
	probs = 
		// High         Medium       Low           // Physics ForceAndMotion 
		  (0.9860451,   0.0139364,   1.855112e-5,  // High    High           
		   0.7482276,   0.2470455,   0.004726881,  // High    Medium         
		   0.1947,      0.6619899,   0.14331,      // High    Low            
		   0.8446385,   0.1537204,   0.001641184,  // Medium  High           
		   0.3029545,   0.6178272,   0.07921831,   // Medium  Medium         
		   0.02040035,  0.4321269,   0.5474727,    // Medium  Low            
		   0.4320574,   0.5283243,   0.03961834,   // Low     High           
		   0.04449342,  0.5447132,   0.4107934,    // Low     Medium         
		   6.18098e-4,  0.09547768,  0.9039042);   // Low     Low            ;
	numcases = 10;
	title = "Linear Momentum";
	comment = "Properties of momentum\nConservation of momentum";
	whenchanged = 1594052873;
	user U1 {
		Truename = "LinearMomentum";
		rules = "structure(\"Compensatory\", .Names = \"LinearMomentum\")";
		link = "structure(\"normalLink\", .Names = \"LinearMomentum\")";
		betas = "structure(-0.2, .Names = \"LinearMomentum\")";
		linkScale = "0.4472135955";
		Q = "TRUE";
		lnAlphas = "structure(c(-0.25541281193655, 0), .Names = c(\"Physics\", \"ForceAndMotion\" ))";
		priorWeight = "10";
		};
	};

node Energy {
	discrete = TRUE;
	states = (High, Medium, Low);
	levels = (0.9674215661, 0, -0.9674215661);
	kind = NATURE;
	chance = CHANCE;
	parents = (Physics, ForceAndMotion);
	probs = 
		// High         Medium       Low           // Physics ForceAndMotion 
		  (0.9614508,   0.03843888,  1.103568e-4,  // High    High           
		   0.6242427,   0.3633061,   0.01245118,   // High    Medium         
		   0.1282946,   0.6574613,   0.214244,     // High    Low            
		   0.687224,    0.3048926,   0.007883433,  // Medium  High           
		   0.1677398,   0.6645205,   0.1677398,    // Medium  Medium         
		   0.007883433, 0.3048926,   0.687224,     // Medium  Low            
		   0.214244,    0.6574613,   0.1282946,    // Low     High           
		   0.01245118,  0.3633061,   0.6242427,    // Low     Medium         
		   1.103568e-4, 0.03843888,  0.9614508);   // Low     Low            ;
	numcases = 10;
	title = "Energy";
	comment = "Gravitational Potential Energy \nKinetic Energy\nElastic potential energy \nEnergy Conservation \
		";
	whenchanged = 1594052874;
	user U1 {
		Truename = "Energy";
		rules = "structure(\"Compensatory\", .Names = \"Energy\")";
		link = "structure(\"normalLink\", .Names = \"Energy\")";
		betas = "structure(0, .Names = \"Energy\")";
		linkScale = "0.4472135955";
		Q = "TRUE";
		lnAlphas = "structure(c(-0.178337472010094, -0.0526802577767502), .Names = c(\"Physics\",  \
			\"ForceAndMotion\"))";
		priorWeight = "10";
		};
	};

node Torque {
	discrete = TRUE;
	states = (High, Medium, Low);
	levels = (0.9674215661, 0, -0.9674215661);
	kind = NATURE;
	chance = CHANCE;
	parents = (Physics, ForceAndMotion);
	probs = 
		// High         Medium       Low           // Physics ForceAndMotion 
		  (0.7438021,   0.2512776,   0.004920268,  // High    High           
		   0.237914,    0.6495674,   0.1125186,    // High    Medium         
		   0.0187092,   0.4197415,   0.5615493,    // High    Low            
		   0.237914,    0.6495674,   0.1125186,    // Medium  High           
		   0.0187092,   0.4197415,   0.5615493,    // Medium  Medium         
		   2.810103e-4, 0.06359344,  0.9361255,    // Medium  Low            
		   0.0187092,   0.4197415,   0.5615493,    // Low     High           
		   2.810103e-4, 0.06359344,  0.9361255,    // Low     Medium         
		   7.270193e-7, 0.001918265, 0.998081);    // Low     Low            ;
	numcases = 10;
	title = "Torque";
	comment = "Properties of torque\nStatic equilibrium";
	whenchanged = 1594052874;
	user U1 {
		Truename = "Torque";
		rules = "structure(\"Compensatory\", .Names = \"Torque\")";
		link = "structure(\"normalLink\", .Names = \"Torque\")";
		betas = "structure(0.5, .Names = \"Torque\")";
		linkScale = "0.4472135955";
		Q = "TRUE";
		lnAlphas = "structure(c(-0.111571775657011, -0.111571775657011), .Names = c(\"Physics\",  \
			\"ForceAndMotion\"))";
		priorWeight = "10";
		};
	};

node NFL {
	discrete = TRUE;
	states = (High, Medium, Low);
	levels = (0.9674215661, 0, -0.9674215661);
	kind = NATURE;
	chance = CHANCE;
	parents = (ForceAndMotion);
	probs = 
		// High         Medium       Low           // ForceAndMotion 
		  (0.9497597,   0.050061,    1.793107e-4,  // High           
		   0.3850228,   0.5638431,   0.05113405,   // Medium         
		   0.01296835,  0.3687819,   0.6182498);   // Low            ;
	numcases = 10;
	title = "Newton's First Law";
	comment = "\D1\8F\D1\8ES";
	whenchanged = 1594052874;
	user U1 {
		Truename = "NFL";
		rules = "structure(\"Compensatory\", .Names = \"NFL\")";
		link = "structure(\"normalLink\", .Names = \"NFL\")";
		betas = "structure(-0.3, .Names = \"NFL\")";
		linkScale = "0.4472135955";
		Q = "TRUE";
		lnAlphas = "structure(-0.111571775657011, .Names = \"ForceAndMotion\")";
		priorWeight = "10";
		};
	};

node NSL {
	discrete = TRUE;
	states = (High, Medium, Low);
	levels = (0.9674215661, 0, -0.9674215661);
	kind = NATURE;
	chance = CHANCE;
	parents = (ForceAndMotion);
	probs = 
		// High         Medium       Low           // ForceAndMotion 
		  (0.834402,    0.1637201,   0.001877881,  // High           
		   0.1677398,   0.6645205,   0.1677398,    // Medium         
		   0.001877881, 0.1637201,   0.834402);    // Low            ;
	numcases = 10;
	title = "Newton's Second Law";
	comment = "Mass and acceleration are inversely related\n\nNet force and acceleration are directly related";
	whenchanged = 1594052874;
	user U1 {
		Truename = "NSL";
		rules = "structure(\"Compensatory\", .Names = \"NSL\")";
		link = "structure(\"normalLink\", .Names = \"NSL\")";
		betas = "structure(0, .Names = \"NSL\")";
		linkScale = "0.4472135955";
		Q = "TRUE";
		lnAlphas = "structure(-0.111571775657011, .Names = \"ForceAndMotion\")";
		priorWeight = "10";
		};
	};

node NTL {
	discrete = TRUE;
	states = (High, Medium, Low);
	levels = (0.9674215661, 0, -0.9674215661);
	kind = NATURE;
	chance = CHANCE;
	parents = (ForceAndMotion);
	probs = 
		// High         Medium       Low           // ForceAndMotion 
		  (0.6182498,   0.3687819,   0.01296835,   // High           
		   0.05113405,  0.5638431,   0.3850228,    // Medium         
		   1.793107e-4, 0.050061,    0.9497597);   // Low            ;
	numcases = 10;
	title = "Newton's Third Law";
	comment = "Force pairs act in opposite directions\nForce pairs have equal magnitudes";
	whenchanged = 1594052875;
	user U1 {
		Truename = "NTL";
		rules = "structure(\"Compensatory\", .Names = \"NTL\")";
		link = "structure(\"normalLink\", .Names = \"NTL\")";
		betas = "structure(0.3, .Names = \"NTL\")";
		linkScale = "0.4472135955";
		Q = "TRUE";
		lnAlphas = "structure(-0.111571775657011, .Names = \"ForceAndMotion\")";
		priorWeight = "10";
		};
	};

node POfMom {
	discrete = TRUE;
	states = (High, Medium, Low);
	levels = (0.9674215661, 0, -0.9674215661);
	kind = NATURE;
	chance = CHANCE;
	parents = (LinearMomentum);
	probs = 
		// High         Medium       Low           // LinearMomentum 
		  (0.834402,    0.1637201,   0.001877881,  // High           
		   0.1677398,   0.6645205,   0.1677398,    // Medium         
		   0.001877881, 0.1637201,   0.834402);    // Low            ;
	numcases = 10;
	title = "Properties of momentum";
	comment = "Momentum is directly related to mass\n\
		Momentum is directly related to velocity\n\
		Momentum is parallel to velocity";
	whenchanged = 1594052875;
	user U1 {
		Truename = "POfMom";
		rules = "structure(\"Compensatory\", .Names = \"POfMom\")";
		link = "structure(\"normalLink\", .Names = \"POfMom\")";
		betas = "structure(0, .Names = \"POfMom\")";
		linkScale = "0.4472135955";
		Q = "TRUE";
		lnAlphas = "structure(-0.111571775657011, .Names = \"LinearMomentum\")";
		priorWeight = "10";
		};
	};

node ConOfMom {
	discrete = TRUE;
	states = (High, Medium, Low);
	levels = (0.9674215661, 0, -0.9674215661);
	kind = NATURE;
	chance = CHANCE;
	parents = (LinearMomentum, POfMom);
	probs = 
		// High         Medium       Low           // LinearMomentum POfMom 
		  (0.8648399,   0.1339316,   0.001228463,  // High           High   
		   0.3951908,   0.5563979,   0.0484114,    // High           Medium 
		   0.05113405,  0.5638431,   0.3850228,    // High           Low    
		   0.3951908,   0.5563979,   0.0484114,    // Medium         High   
		   0.05113405,  0.5638431,   0.3850228,    // Medium         Medium 
		   0.001340635, 0.139662,    0.8589973,    // Medium         Low    
		   0.05113405,  0.5638431,   0.3850228,    // Low            High   
		   0.001340635, 0.139662,    0.8589973,    // Low            Medium 
		   6.205579e-6, 0.007257187, 0.9927366);   // Low            Low    ;
	numcases = 10;
	title = "Conservation of momentum";
	comment = "The total amount of momentum of a system \ndoes not change during a collision";
	whenchanged = 1594052876;
	user U1 {
		Truename = "ConOfMom";
		rules = "structure(\"Compensatory\", .Names = \"ConOfMom\")";
		link = "structure(\"normalLink\", .Names = \"ConOfMom\")";
		betas = "structure(0.3, .Names = \"ConOfMom\")";
		linkScale = "0.4472135955";
		Q = "TRUE";
		lnAlphas = "structure(c(-0.111571775657011, -0.111571775657011), .Names = c(\"LinearMomentum\",  \"POfMom\"\
			))";
		priorWeight = "10";
		};
	};

node EnergyTransfer {
	discrete = TRUE;
	states = (High, Medium, Low);
	levels = (0.9674215661, 0, -0.9674215661);
	kind = NATURE;
	chance = CHANCE;
	parents = (Energy);
	probs = 
		// High         Medium       Low           // Energy 
		  (0.834402,    0.1637201,   0.001877881,  // High   
		   0.1677398,   0.6645205,   0.1677398,    // Medium 
		   0.001877881, 0.1637201,   0.834402);    // Low    ;
	numcases = 10;
	title = "Energy can Transfer";
	whenchanged = 1594052875;
	user U1 {
		Truename = "EnergyTransfer";
		rules = "structure(\"Compensatory\", .Names = \"EnergyTransfer\")";
		link = "structure(\"normalLink\", .Names = \"EnergyTransfer\")";
		betas = "structure(0, .Names = \"EnergyTransfer\")";
		linkScale = "0.4472135955";
		Q = "TRUE";
		lnAlphas = "structure(-0.111571775657011, .Names = \"Energy\")";
		priorWeight = "10";
		};
	};

node EnergyDissipate {
	discrete = TRUE;
	states = (High, Medium, Low);
	levels = (0.9674215661, 0, -0.9674215661);
	kind = NATURE;
	chance = CHANCE;
	parents = (Energy);
	probs = 
		// High         Medium       Low           // Energy 
		  (0.7000325,   0.2928399,   0.007127648,  // High   
		   0.07921831,  0.6178272,   0.3029545,    // Medium 
		   4.111278e-4, 0.07754987,  0.922039);    // Low    ;
	numcases = 10;
	title = "Energy can Dissipate";
	whenchanged = 1594052875;
	user U1 {
		Truename = "EnergyDissipate";
		rules = "structure(\"Compensatory\", .Names = \"EnergyDissipate\")";
		link = "structure(\"normalLink\", .Names = \"EnergyDissipate\")";
		betas = "structure(0.2, .Names = \"EnergyDissipate\")";
		linkScale = "0.4472135955";
		Q = "TRUE";
		lnAlphas = "structure(-0.111571775657011, .Names = \"Energy\")";
		priorWeight = "10";
		};
	};

node PropertiesofTorque {
	discrete = TRUE;
	states = (High, Medium, Low);
	levels = (0.9674215661, 0, -0.9674215661);
	kind = NATURE;
	chance = CHANCE;
	parents = (Torque);
	probs = 
		// High         Medium       Low           // Torque 
		  (0.9689887,   0.03093666,  7.459741e-5,  // High   
		   0.4726109,   0.4957735,   0.03161557,   // Medium 
		   0.02255906,  0.446641,    0.5308);      // Low    ;
	numcases = 10;
	title = "Properties of Torque";
	whenchanged = 1594052876;
	user U1 {
		Truename = "PropertiesofTorque";
		rules = "structure(\"Compensatory\", .Names = \"PropertiesofTorque\")";
		link = "structure(\"normalLink\", .Names = \"PropertiesofTorque\")";
		betas = "structure(-0.4, .Names = \"PropertiesofTorque\")";
		linkScale = "0.4472135955";
		Q = "TRUE";
		lnAlphas = "structure(-0.111571775657011, .Names = \"Torque\")";
		priorWeight = "10";
		};
	};

node StaticEquilibrium {
	discrete = TRUE;
	states = (High, Medium, Low);
	levels = (0.9674215661, 0, -0.9674215661);
	kind = NATURE;
	chance = CHANCE;
	parents = (Torque);
	probs = 
		// High         Medium       Low           // Torque 
		  (0.8840179,   0.1150827,   8.994e-4,     // High   
		   0.229793,    0.6525424,   0.1176646,    // Medium 
		   0.003743477, 0.2234563,   0.7728);      // Low    ;
	numcases = 10;
	title = "Static Equilibrium";
	whenchanged = 1594052876;
	user U1 {
		Truename = "StaticEquilibrium";
		rules = "structure(\"Compensatory\", .Names = \"StaticEquilibrium\")";
		link = "structure(\"normalLink\", .Names = \"StaticEquilibrium\")";
		betas = "structure(-0.1, .Names = \"StaticEquilibrium\")";
		linkScale = "0.4472135955";
		Q = "TRUE";
		lnAlphas = "structure(-0.111571775657011, .Names = \"Torque\")";
		priorWeight = "10";
		};
	};
NodeSet pnodes {Nodes = (Physics, ForceAndMotion, LinearMomentum, Energy, Torque, NFL, NSL, NTL, POfMom, EnergyTransfer, EnergyDissipate, PropertiesofTorque, StaticEquilibrium, ConOfMom);};
NodeSet pnode {Nodes = (Physics);};
NodeSet Proficiency {Nodes = (Physics, ForceAndMotion, LinearMomentum, Energy, Torque, NFL, NSL, NTL, POfMom, EnergyTransfer, EnergyDissipate, PropertiesofTorque, StaticEquilibrium, ConOfMom);};
NodeSet Proficiencies {Nodes = (ForceAndMotion, LinearMomentum, Energy, Torque, NFL, NSL, NTL, POfMom, EnergyTransfer, EnergyDissipate, PropertiesofTorque, StaticEquilibrium, ConOfMom);};
NodeSet HighLevel {Nodes = (ForceAndMotion, LinearMomentum, Energy, Torque);};
NodeSet LowLevel {Nodes = (NFL, NSL, NTL, POfMom, EnergyTransfer, EnergyDissipate, PropertiesofTorque, StaticEquilibrium, ConOfMom);};
};
