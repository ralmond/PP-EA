// ~->[DNET-1]->~

// File created by AlmondR_2 at FLStateU using Netica 5.10 on Jan 17, 2020 at 17:42:28.

bnet PlumBlossom {
autoupdate = FALSE;
title = "Plum Blossom";
whenchanged = 1579300948;
user U1 {
	Truename = "PlumBlossom";
	Hub = "PP_OrangeNodes_6";
	Pathname = "PlumBlossom.dne";
	};

param X_NSL_5 {
	kind = DISCONNECTED;
	discrete = TRUE;
	states = (High, Medium, Low);
	levels = (0.9674215661, 0, -0.9674215661);
	title = "NSL";
	whenchanged = 1579300630;
	};

param X_NFL_5 {
	kind = DISCONNECTED;
	discrete = TRUE;
	states = (High, Medium, Low);
	levels = (0.9674215661, 0, -0.9674215661);
	title = "NFL";
	whenchanged = 1579300630;
	};

node Duration {
	kind = NATURE;
	discrete = FALSE;
	chance = CHANCE;
	states = (Q1, Q2, Q3, Q4);
	levels = (0, 12.37, 21.423, 40.467, INFINITY);
	inputs = (NFL, NSL);
	parents = (X_NFL_5, X_NSL_5);
	probs = 
		// Q1           Q2           Q3           Q4            // NFL    NSL    
		  (0.9948082,   0.005164863, 2.681503e-5, 1.392188e-7,  // High   High   
		   0.9890717,   0.01080884,  1.181218e-4, 1.290867e-6,  // High   Medium 
		   0.9769974,   0.02247379,  5.169627e-4, 1.189165e-5,  // High   Low    
		   0.984145,    0.01560365,  2.473963e-4, 3.922476e-6,  // Medium High   
		   0.966628,    0.03225954,  0.001076606, 3.592987e-5,  // Medium Medium 
		   0.9297752,   0.06531432,  0.004588164, 3.223068e-4,  // Medium Low    
		   0.9515864,   0.04607473,  0.002230886, 1.08017e-4,   // Low    High   
		   0.8981799,   0.09153975,  0.00932945,  9.50829e-4,   // Low    Medium 
		   0.787142,    0.1688617,   0.03622507,  0.007771186); // Low    Low    ;
	numcases = 10;
	title = "Duration to solve level";
	whenchanged = 1579300630;
	user U1 {
		Truename = "Duration";
		link = "\"partialCredit\"";
		rules = "\"Compensatory\"";
		Q = "structure(c(TRUE, TRUE, TRUE, TRUE, TRUE, TRUE), .Dim = 3:2, .Dimnames = list(     c(\"396\", \
			\"397\", \"398\"), c(\"NFL\", \"NSL\")))";
		lnAlphas = "list(c(NFL = -0.0408219945202552, NSL = -0.446287102628419),      c(NFL = -0.0408219945202552, \
			NSL = -0.446287102628419), c(NFL = -0.0408219945202552,      NSL = -0.446287102628419))";
		betas = "list(-2L, -2L, -2L)";
		priorWeight = "10";
		};
	};

param X_NSL_4 {
	kind = DISCONNECTED;
	discrete = TRUE;
	states = (High, Medium, Low);
	levels = (0.9674215661, 0, -0.9674215661);
	title = "NSL";
	whenchanged = 1579300629;
	};

param X_NFL_4 {
	kind = DISCONNECTED;
	discrete = TRUE;
	states = (High, Medium, Low);
	levels = (0.9674215661, 0, -0.9674215661);
	title = "NFL";
	whenchanged = 1579300629;
	};

node AppropriateSlider {
	kind = NATURE;
	discrete = TRUE;
	chance = CHANCE;
	states = (almostAlways, mostly, mostlyNot, almostNever);
	statetitles = ("almost always", "mostly", "mostlyNot", "almost never");
	StateComments = ("#Irrelvant < 2", "#Irrelvant < #Relevant", "#relevant <= #Irrevalnt", "#relevant < 2");
	inputs = (NFL, NSL);
	parents = (X_NFL_4, X_NSL_4);
	probs = 
		// almost always mostly      mostlyNot    almost never  // NFL    NSL    
		  (0.9948082,   0.005164863, 2.681503e-5, 1.392188e-7,  // High   High   
		   0.9890717,   0.01080884,  1.181218e-4, 1.290867e-6,  // High   Medium 
		   0.9769974,   0.02247379,  5.169627e-4, 1.189165e-5,  // High   Low    
		   0.984145,    0.01560365,  2.473963e-4, 3.922476e-6,  // Medium High   
		   0.966628,    0.03225954,  0.001076606, 3.592987e-5,  // Medium Medium 
		   0.9297752,   0.06531432,  0.004588164, 3.223068e-4,  // Medium Low    
		   0.9515864,   0.04607473,  0.002230886, 1.08017e-4,   // Low    High   
		   0.8981799,   0.09153975,  0.00932945,  9.50829e-4,   // Low    Medium 
		   0.787142,    0.1688617,   0.03622507,  0.007771186); // Low    Low    ;
	numcases = 10;
	title = "Slider";
	whenchanged = 1579300629;
	user U1 {
		Truename = "AppropriateSlider";
		link = "\"partialCredit\"";
		rules = "\"Compensatory\"";
		Q = "structure(c(TRUE, TRUE, TRUE, TRUE, TRUE, TRUE), .Dim = 3:2, .Dimnames = list(     c(\"393\", \
			\"394\", \"395\"), c(\"NFL\", \"NSL\")))";
		lnAlphas = "list(c(NFL = -0.0408219945202552, NSL = -0.446287102628419),      c(NFL = -0.0408219945202552, \
			NSL = -0.446287102628419), c(NFL = -0.0408219945202552,      NSL = -0.446287102628419))";
		betas = "list(-2L, -2L, -2L)";
		priorWeight = "10";
		};
	};

param X_NSL_3 {
	kind = DISCONNECTED;
	discrete = TRUE;
	states = (High, Medium, Low);
	levels = (0.9674215661, 0, -0.9674215661);
	title = "NSL";
	whenchanged = 1579300628;
	};

param X_NFL_3 {
	kind = DISCONNECTED;
	discrete = TRUE;
	states = (High, Medium, Low);
	levels = (0.9674215661, 0, -0.9674215661);
	title = "NFL";
	whenchanged = 1579300628;
	};

node SliderAdjust {
	kind = NATURE;
	discrete = FALSE;
	chance = CHANCE;
	states = (Zero, One, Two, MorethanTwo);
	levels = (0, 0.1, 1.1, 2.1, INFINITY);
	inputs = (NFL, NSL);
	parents = (X_NFL_3, X_NSL_3);
	probs = 
		// Zero         One          Two          MorethanTwo   // NFL    NSL    
		  (0.9948082,   0.005164863, 2.681503e-5, 1.392188e-7,  // High   High   
		   0.9890717,   0.01080884,  1.181218e-4, 1.290867e-6,  // High   Medium 
		   0.9769974,   0.02247379,  5.169627e-4, 1.189165e-5,  // High   Low    
		   0.984145,    0.01560365,  2.473963e-4, 3.922476e-6,  // Medium High   
		   0.966628,    0.03225954,  0.001076606, 3.592987e-5,  // Medium Medium 
		   0.9297752,   0.06531432,  0.004588164, 3.223068e-4,  // Medium Low    
		   0.9515864,   0.04607473,  0.002230886, 1.08017e-4,   // Low    High   
		   0.8981799,   0.09153975,  0.00932945,  9.50829e-4,   // Low    Medium 
		   0.787142,    0.1688617,   0.03622507,  0.007771186); // Low    Low    ;
	numcases = 10;
	title = "Number of slider adjustment";
	whenchanged = 1579300628;
	user U1 {
		Truename = "SliderAdjust";
		link = "\"partialCredit\"";
		rules = "\"Compensatory\"";
		Q = "structure(c(TRUE, TRUE, TRUE, TRUE, TRUE, TRUE), .Dim = 3:2, .Dimnames = list(     c(\"390\", \
			\"391\", \"392\"), c(\"NFL\", \"NSL\")))";
		lnAlphas = "list(c(NFL = -0.0408219945202552, NSL = -0.446287102628419),      c(NFL = -0.0408219945202552, \
			NSL = -0.446287102628419), c(NFL = -0.0408219945202552,      NSL = -0.446287102628419))";
		betas = "list(-2L, -2L, -2L)";
		priorWeight = "10";
		};
	};

param X_NSL_2 {
	kind = DISCONNECTED;
	discrete = TRUE;
	states = (High, Medium, Low);
	levels = (0.9674215661, 0, -0.9674215661);
	title = "NSL";
	whenchanged = 1579300628;
	};

param X_NFL_2 {
	kind = DISCONNECTED;
	discrete = TRUE;
	states = (High, Medium, Low);
	levels = (0.9674215661, 0, -0.9674215661);
	title = "NFL";
	whenchanged = 1579300628;
	};

node PufferClicks {
	kind = NATURE;
	discrete = FALSE;
	chance = CHANCE;
	states = (Zero, One, Two, MorethanTwo);
	levels = (0, 0.1, 1.1, 2.1, INFINITY);
	inputs = (NFL, NSL);
	parents = (X_NFL_2, X_NSL_2);
	probs = 
		// Zero         One          Two          MorethanTwo   // NFL    NSL    
		  (0.9948082,   0.005164863, 2.681503e-5, 1.392188e-7,  // High   High   
		   0.9890717,   0.01080884,  1.181218e-4, 1.290867e-6,  // High   Medium 
		   0.9769974,   0.02247379,  5.169627e-4, 1.189165e-5,  // High   Low    
		   0.984145,    0.01560365,  2.473963e-4, 3.922476e-6,  // Medium High   
		   0.966628,    0.03225954,  0.001076606, 3.592987e-5,  // Medium Medium 
		   0.9297752,   0.06531432,  0.004588164, 3.223068e-4,  // Medium Low    
		   0.9515864,   0.04607473,  0.002230886, 1.08017e-4,   // Low    High   
		   0.8981799,   0.09153975,  0.00932945,  9.50829e-4,   // Low    Medium 
		   0.787142,    0.1688617,   0.03622507,  0.007771186); // Low    Low    ;
	numcases = 10;
	title = "Number of puffer clicks";
	whenchanged = 1579300628;
	user U1 {
		Truename = "PufferClicks";
		link = "\"partialCredit\"";
		rules = "\"Compensatory\"";
		Q = "structure(c(TRUE, TRUE, TRUE, TRUE, TRUE, TRUE), .Dim = 3:2, .Dimnames = list(     c(\"387\", \
			\"388\", \"389\"), c(\"NFL\", \"NSL\")))";
		lnAlphas = "list(c(NFL = -0.0408219945202552, NSL = -0.446287102628419),      c(NFL = -0.0408219945202552, \
			NSL = -0.446287102628419), c(NFL = -0.0408219945202552,      NSL = -0.446287102628419))";
		betas = "list(-2L, -2L, -2L)";
		priorWeight = "10";
		};
	};

param X_NSL_1 {
	kind = DISCONNECTED;
	discrete = TRUE;
	states = (High, Medium, Low);
	levels = (0.9674215661, 0, -0.9674215661);
	title = "NSL";
	whenchanged = 1579300627;
	};

param X_NFL_1 {
	kind = DISCONNECTED;
	discrete = TRUE;
	states = (High, Medium, Low);
	levels = (0.9674215661, 0, -0.9674215661);
	title = "NFL";
	whenchanged = 1579300627;
	};

node TrophyLevel {
	kind = NATURE;
	discrete = TRUE;
	chance = CHANCE;
	states = (Gold, Silver, None);
	levels = (2, 1, 0);
	inputs = (NFL, NSL);
	parents = (X_NFL_1, X_NSL_1);
	probs = 
		// Gold         Silver       None          // NFL    NSL    
		  (0.9948083,   0.005164864, 2.681503e-5,  // High   High   
		   0.989073,    0.01080885,  1.18122e-4,   // High   Medium 
		   0.977009,    0.02247406,  5.169688e-4,  // High   Low    
		   0.9841489,   0.01560371,  2.473973e-4,  // Medium High   
		   0.9666626,   0.03226069,  0.001076645,  // Medium Medium 
		   0.930075,    0.06533539,  0.004589643,  // Medium Low    
		   0.9516892,   0.04607971,  0.002231127,  // Low    High   
		   0.8990348,   0.09162687,  0.00933833,   // Low    Medium 
		   0.7933069,   0.1701842,   0.03650879);  // Low    Low    ;
	numcases = 10;
	title = "Level solving status";
	whenchanged = 1579300627;
	user U1 {
		Truename = "TrophyLevel";
		link = "\"partialCredit\"";
		rules = "\"Compensatory\"";
		Q = "structure(c(TRUE, TRUE, TRUE, TRUE), .Dim = c(2L, 2L), .Dimnames = list(     c(\"385\", \
			\"386\"), c(\"NFL\", \"NSL\")))";
		lnAlphas = "list(c(NFL = -0.0408219945202552, NSL = -0.446287102628419),      c(NFL = -0.0408219945202552, \
			NSL = -0.446287102628419))";
		betas = "list(-2L, -2L)";
		priorWeight = "10";
		};
	};
NodeSet pnodes {Nodes = (TrophyLevel, PufferClicks, SliderAdjust, AppropriateSlider, Duration);};
NodeSet Observable {Nodes = (TrophyLevel, PufferClicks, SliderAdjust, AppropriateSlider, Duration);};
};
